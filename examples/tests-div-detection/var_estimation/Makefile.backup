
# S3FP_BASE=/home/wfchiang/numerical_precision/s3fp/trunk
S3FP_BASE=../../..
S3FP=$(S3FP_BASE)/s3fp

CC=g++

OPT=-O0

all: var_estimation_32 var_estimation_64 var_estimation_128 

var_estimation_32: var_estimation.cpp
	$(CC) $(OPT) -I../../include -DWFT=float -o var_estimation_32 var_estimation.cpp 

var_estimation_64: var_estimation.cpp
	$(CC) $(OPT) -I../../include -DWFT=double -o var_estimation_64 var_estimation.cpp

var_estimation_128: var_estimation.cpp
	$(CC) $(OPT) -I../../include -DWFT=__float128 -o var_estimation_128 var_estimation.cpp -lquadmath 

clean:
	-rm var_estimation_32
	-rm var_estimation_64
	-rm var_estimation_128
	-rm __outdump
	-rm output_*
	-rm *~


# ==== for s3fp ==== 

N=10000
RSEED=5300
TIMEOUT=1800
RESOURCE=TIME

# FTERROR=FIRST_FPS_AND_DIS # OBJECTIVE_AND_REPRESENT 
# DIV_FUNC=CONSIST
ERR_OPT = FIRST 
ERR_FUNC = REL 
SIG_FUNC=LAST_INT
DIFF_CON=LAST_INT

OPT_REPRESENT=MIX

REL_DELTA=0.0
UNIFORM_INPUTLB=-100.0
UNIFORM_INPUTUB=100.0

SP_SELECTION_METHOD=SEARCH
ROBUST_EST_SP_SEARCH=BGRT
SP_SELECTION_TIMEOUT=180 
LS_REFINEMENT=SORT_RANGE

test:
	cp unstable_input random_input 
	./var_estimation_32 random_input output_32
	$(S3FP_BASE)/utils/show_best output_32

create-base-conf:
	@echo "==== generate s3fp_setting ====" 
	@echo N_VARS = $(N) > s3fp_setting 
	@echo INPUT_FILE = random_input >> s3fp_setting 
	@echo EXE_LP = "./var_estimation_32" >> s3fp_setting  
	@echo OUTPUT_LP = output_32 >> s3fp_setting 
	@echo EXE_HP = "./var_estimation_128" >> s3fp_setting 
	@echo OUTPUT_HP = output_128 >> s3fp_setting 
	@echo TIMEOUT = $(TIMEOUT) >> s3fp_setting
	@echo RESOURCE = $(RESOURCE) >> s3fp_setting
	@echo RSEED = $(RSEED) >> s3fp_setting
#	@echo FTERROR = $(FTERROR) >> s3fp_setting
	@echo OPT_REPRESENT = $(OPT_REPRESENT) >> s3fp_setting
	@echo OPT_RANGE = $(OPT_RANGE) >> s3fp_setting 
	@echo REL_DELTA = $(REL_DELTA) >> s3fp_setting
#	@echo PARALLELRT = false >> s3fp_setting
	@echo CHECK_UNSTABLE_ERROR = true >> s3fp_setting
	@echo UNSTABLE_ERROR_REPORT = unstable_error >> s3fp_setting
#	@echo OPT_FUNC = $(OPT_FUNC) >> s3fp_setting 
#	@echo DIV_FUNC = $(DIV_FUNC) >> s3fp_setting 
	@echo ERR_OPT = $(ERR_OPT) >> s3fp_setting 
	@echo ERR_FUNC = $(ERR_FUNC) >> s3fp_setting 
	@echo SIG_FUNC = $(SIG_FUNC) >> s3fp_setting 
	@echo DIFF_CON = $(DIFF_CON) >> s3fp_setting 

create-opt4j-config: 
	@echo "==== generate opt4j-config.xml ====" 
	$(S3FP_BASE)/utils/opt4j-config-gen.py ./opt4j-config.xml ./ $(N) 0 $(TIMEOUT) $(OPT4J_ERRTYPE) $(UNIFORM_INPUTLB) $(UNIFORM_INPUTUB) "./var_estimation_32" output_32 "./var_estimation_128" ./output_128  

uniform-input: create-base-conf 
	@echo UNIFORM_INPUT = true >> s3fp_setting
	@echo UNIFORM_INPUTLB = $(UNIFORM_INPUTLB) >> s3fp_setting 
	@echo UNIFORM_INPUTUB = $(UNIFORM_INPUTUB) >> s3fp_setting

test-urt: uniform-input
	@echo RT = URT >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-bgrt: uniform-input
	@echo RT = BGRT >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-ils: uniform-input
	@echo RT = ILS >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-opt4j: uniform-input create-opt4j-config 
	@echo RT = OPT4J >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-robust: uniform-input create-opt4j-config 
	@echo RT = ROBUST_EST >> s3fp_setting 
	@echo SP_SELECTION_METHOD = $(SP_SELECTION_METHOD) >> s3fp_setting 
	@echo ROBUST_EST_SP_SEARCH = $(ROBUST_EST_SP_SEARCH) >> s3fp_setting 
	@echo SP_SELECTION_TIMEOUT = $(SP_SELECTION_TIMEOUT) >> s3fp_setting 
	@echo LS_REFINEMENT = $(LS_REFINEMENT) >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-urob: uniform-input
	@echo RT = UROBUST_CHECK >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 
