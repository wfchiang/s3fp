
S3FP_BASE=../../..
S3FP=$(S3FP_BASE)/s3fp

CC=g++

OPT=-O0
# VERBOSE=-D__VERBOSE

all: simple_convex_hull_32 simple_convex_hull_64 simple_convex_hull_128

simple_convex_hull_32: simple_convex_hull.cpp
	$(CC) -I../../include -DWFT=float $(OPT) $(VERBOSE) -o simple_convex_hull_32 simple_convex_hull.cpp 

simple_convex_hull_64: simple_convex_hull.cpp
	$(CC) -I../../include -DWFT=double $(OPT) $(VERBOSE) -o simple_convex_hull_64 simple_convex_hull.cpp

simple_convex_hull_128: simple_convex_hull.cpp
	$(CC) -I../../include -DWFT=__float128 $(OPT) $(VERBOSE) -o simple_convex_hull_128 simple_convex_hull.cpp

clean: 
	-rm *~
	-rm simple_convex_hull_32
	-rm simple_convex_hull_64
	-rm simple_convex_hull_128
	-rm hand_inputs 
	-rm output*
	-rm rm __outdump

# ==== for s3fp ==== 
CHMETHOD=0
CANO_FORM=0
SAMPLE_PHASE=0
VERIFY_METHOD=0

N=2000
RSEED=3000
TIMEOUT=1700
RESOURCE=TIME
UNIFORM_INPUTLB=-100.0
UNIFORM_INPUTUB=100.0

# FTERROR=FIRST_FPS_AND_DIS
# DIV_FUNC=CONSIST
ERR_OPT = FIRST
ERR_FUNC = REL
SIG_FUNC = LAST_INT
DIFF_CON = LAST_INT

OPT_REPRESENT=MIX
OPT_FUNC=REL
ifeq ($(OPT_FUNC), REL)
OPT_RANGE=WIDE
OPT4J_ERRTYPE=6
else 
  ifeq ($(OPT_FUNC), LOWP_VALUE)
  OPT_RANGE=NARROW
  OPT4J_ERRTYPE=7
  else
  $(error Invalid OPT_FUNC ...)
  endif 
endif 

REL_DELTA=0.0

SP_SELECTION_METHOD=SEARCH
ROBUST_EST_SP_SEARCH=BGRT
SP_SELECTION_TIMEOUT=180 
LS_REFINEMENT=SORT_RANGE


create-base-conf:
	@echo "==== generate s3fp_setting ====" 
	@echo N_VARS = $(N) > s3fp_setting 
	@echo INPUT_FILE = random_input >> s3fp_setting 
	@echo EXE_LP = ./simple_convex_hull_32 $(CHMETHOD) $(CANO_FORM) $(SAMPLE_PHASE) $(VERIFY_METHOD) >> s3fp_setting 
	@echo OUTPUT_LP = output_32 >> s3fp_setting 
	@echo EXE_HP = ./simple_convex_hull_128 $(CHMETHOD) $(CANO_FORM) $(SAMPLE_PHASE) $(VERIFY_METHOD) >> s3fp_setting 
	@echo OUTPUT_HP = output_128 >> s3fp_setting 
	@echo TIMEOUT = $(TIMEOUT) >> s3fp_setting
	@echo RESOURCE = $(RESOURCE) >> s3fp_setting
	@echo RSEED = $(RSEED) >> s3fp_setting
#	@echo FTERROR = $(FTERROR) >> s3fp_setting
	@echo OPT_REPRESENT = $(OPT_REPRESENT) >> s3fp_setting
	@echo OPT_RANGE = $(OPT_RANGE) >> s3fp_setting 
	@echo REL_DELTA = $(REL_DELTA) >> s3fp_setting
#	@echo PARALLELRT = false >> s3fp_setting
	@echo CHECK_UNSTABLE_ERROR = true >> s3fp_setting
	@echo UNSTABLE_ERROR_REPORT = unstable_error >> s3fp_setting
	@echo ERR_OPT = $(ERR_OPT) >> s3fp_setting 
	@echo ERR_FUNC = $(ERR_FUNC) >> s3fp_setting 
	@echo SIG_FUNC = $(SIG_FUNC) >> s3fp_setting 
	@echo DIFF_CON = $(DIFF_CON) >> s3fp_setting 
#	@echo OPT_FUNC = $(OPT_FUNC) >> s3fp_setting 
#	@echo DIV_FUNC = $(DIV_FUNC) >> s3fp_setting 

uniform-input: create-base-conf 
	@echo UNIFORM_INPUT = true >> s3fp_setting
	@echo UNIFORM_INPUTLB = $(UNIFORM_INPUTLB) >> s3fp_setting 
	@echo UNIFORM_INPUTUB = $(UNIFORM_INPUTUB) >> s3fp_setting

test-urt: uniform-input
	@echo RT = URT >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-bgrt: uniform-input
	@echo RT = BGRT >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-ils: uniform-input
	@echo RT = ILS >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-robust: uniform-input create-opt4j-config 
	@echo RT = ROBUST_EST >> s3fp_setting 
	@echo SP_SELECTION_METHOD = $(SP_SELECTION_METHOD) >> s3fp_setting 
	@echo ROBUST_EST_SP_SEARCH = $(ROBUST_EST_SP_SEARCH) >> s3fp_setting 
	@echo SP_SELECTION_TIMEOUT = $(SP_SELECTION_TIMEOUT) >> s3fp_setting 
	@echo LS_REFINEMENT = $(LS_REFINEMENT) >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-urob: uniform-input
	@echo RT = UROBUST_CHECK >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 

test-awbs: uniform-input
	@echo RT = AWBS >> s3fp_setting 
	@echo "==== run s3fp ===="
	$(S3FP) 
